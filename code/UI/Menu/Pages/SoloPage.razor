
@inherits Panel
@page "/solo";

<root>
	<div class="sidebar">
		<div class="navbar">
			<a class="button" href="/home">Return</a>
		</div>
	</div>
	<div class="track-container">
		<div class="tracks">
			@foreach (var map in Seasons.FirstOrDefault().GreenMaps)
			{
				<div class="track green" onmouseover="@(() => HoverTrack(map))" onclick="@(() => SelectTrack(map))">
					@* This is ugly af, ill re do it later *@
					@if (CollectedFrenzy(map.MapName) == "frenzy")
					{
						<div class="medal frenzy"></div>
					}
					@if(HasBronze(map.MapName) == "bronze")
					{
						<div class="medal bronze"></div>
					}
					@if (HasSilver(map.MapName) == "silver")
					{
						<div class="medal silver"></div>
					}
					@if (HasGold(map.MapName) == "gold")
					{
						<div class="medal gold"></div>
					}
					@if (HasPlatinum(map.MapName) == "platinum")
					{
						<div class="medal platinum"></div>
					}
					<div class="track-name">@map.MapName</div>
				</div>
			}
		</div>
		<div class="tracks">
			@foreach (var map in Seasons.FirstOrDefault().YellowMaps)
			{
				<div class="track yellow" onmouseover="@(() => HoverTrack(map))" onclick="@(() => SelectTrack(map))">
					@if (CollectedFrenzy(map.MapName) == "frenzy")
					{
						<div class="medal frenzy"></div>
					}
					@if (HasBronze(map.MapName) == "bronze")
					{
						<div class="medal bronze"></div>
					}
					@if (HasSilver(map.MapName) == "silver")
					{
						<div class="medal silver"></div>
					}
					@if (HasGold(map.MapName) == "gold")
					{
						<div class="medal gold"></div>
					}
					@if (HasPlatinum(map.MapName) == "platinum")
					{
						<div class="medal platinum"></div>
					}
					<div class="track-name">@map.MapName</div>
				</div>
			}
		</div>
		<div class="tracks">
			@foreach (var map in Seasons.FirstOrDefault().OrangeMaps)
			{
				<div class="track orange" onmouseover="@(() => HoverTrack(map))" onclick="@(() => SelectTrack(map))">
					@if (CollectedFrenzy(map.MapName) == "frenzy")
					{
						<div class="medal frenzy"></div>
					}
					@if (HasBronze(map.MapName) == "bronze")
					{
						<div class="medal bronze"></div>
					}
					@if (HasSilver(map.MapName) == "silver")
					{
						<div class="medal silver"></div>
					}
					@if (HasGold(map.MapName) == "gold")
					{
						<div class="medal gold"></div>
					}
					@if (HasPlatinum(map.MapName) == "platinum")
					{
						<div class="medal platinum"></div>
					}
					<div class="track-name">@map.MapName</div>
				</div>
			}
		</div>
		<div class="tracks">
			@foreach (var map in Seasons.FirstOrDefault().RedMaps)
			{
				<div class="track red" onmouseover="@(() => HoverTrack(map))" onclick="@(() => SelectTrack(map))">
					@if (CollectedFrenzy(map.MapName) == "frenzy")
					{
						<div class="medal frenzy"></div>
					}
					@if (HasBronze(map.MapName) == "bronze")
					{
						<div class="medal bronze"></div>
					}
					@if (HasSilver(map.MapName) == "silver")
					{
						<div class="medal silver"></div>
					}
					@if (HasGold(map.MapName) == "gold")
					{
						<div class="medal gold"></div>
					}
					@if (HasPlatinum(map.MapName) == "platinum")
					{
						<div class="medal platinum"></div>
					}
					<div class="track-name">@map.MapName</div>
				</div>
			}
		</div>
		<div class="track-panel">
			<div class="track-icon" style="background-image: url('@HoveredMap?.MapIcon')"></div>
			<div class="track-name">@HoveredMap?.MapName</div>
			<div class="track-info">
			<div class="track-falls">Falls: @Falls(HoveredMap?.MapName)</div>
			<div class="track-falls">Completions: @Falls(HoveredMap?.MapName)</div>
			<div class="track-time">Best Time: @BestTime(HoveredMap?.MapName)</div>
			<div class="track-time">Play Time: @PlayTime(HoveredMap?.MapName)</div>
			</div>
		</div>
	</div>
</root>
@code {
	List<UnicycleFrenzySeason> Seasons = new List<UnicycleFrenzySeason>();

	UnicycleFrenzyMap HoveredMap;

	public SoloPage()
	{
		Seasons = ResourceLibrary.GetAll<UnicycleFrenzySeason>().ToList();

		HoveredMap = Seasons.FirstOrDefault().GreenMaps.FirstOrDefault();
	}

	public string Falls(string mapName)
	{
		var map = FileSystem.Data.ReadJson<MapProgress>("unicycle.stats." + mapName + ".json");
		if (map == null) return "0";
		return map.Falls.ToString();
	}

	public string Completions(string mapName)
	{
		var map = FileSystem.Data.ReadJson<MapProgress>("unicycle.stats." + mapName + ".json");
		if (map == null) return "0";
		return map.Completions.ToString();
	}

	public string BestTime(string mapName)
	{
		var map = FileSystem.Data.ReadJson<MapProgress>("unicycle.stats." + mapName + ".json");
		if (map == null) return "--:--";
		var time = TimeSpan.FromSeconds(map.BestTime);
		return time.ToString(@"mm\:ss\:ff");
	}

	public string PlayTime(string mapName)
	{
		var map = FileSystem.Data.ReadJson<MapProgress>("unicycle.stats." + mapName + ".json");
		if (map == null) return "--:--";
		var time = TimeSpan.FromSeconds(map.TimePlayed);
		return time.ToString(@"mm\:ss");
	}

	public string CollectedFrenzy(string mapName)
	{
		var map = FileSystem.Data.ReadJson<MapProgress>("unicycle.stats." + mapName + ".json");
		if (map == null) return "";
		if (map.CollectedFrenzy)
		{
			return "frenzy";
		}

		return "";
	}

	public string HasBronze(string mapName)
	{
		var map = FileSystem.Data.ReadJson<MapProgress>("unicycle.stats." + mapName + ".json");
		if (map == null) return "";
		if(map.HasBronzeMedal)
		{
			return "bronze";
		}

		return "";
	}

	public string HasSilver(string mapName)
	{
		var map = FileSystem.Data.ReadJson<MapProgress>("unicycle.stats." + mapName + ".json");
		if (map == null) return "";
		if(map.HasSilverMedal)
		{
			return "silver";
		}

		return "";
	}

	public string HasGold(string mapName)
	{
		var map = FileSystem.Data.ReadJson<MapProgress>("unicycle.stats." + mapName + ".json");
		if (map == null) return "";
		if(map.HasGoldMedal)
		{
			return "gold";
		}

		return "";
	}

	public string HasPlatinum(string mapName)
	{
		var map = FileSystem.Data.ReadJson<MapProgress>("unicycle.stats." + mapName + ".json");
		if (map == null) return "";
		if(map.HasPlatinumMedal)
		{
			return "platinum";
		}

		return "";
	}



	public void HoverTrack(UnicycleFrenzyMap map)
	{
		//Log.Error("HOVER TRACK: " + map.MapName);
		HoveredMap = map;
	}

	public void SelectTrack(UnicycleFrenzyMap map)
	{
		//Log.Error("SELECT TRACK: " + map.MapName);
		GameManager.ActiveScene.LoadFromFile(map.MapScene.ResourcePath);
	}
}
