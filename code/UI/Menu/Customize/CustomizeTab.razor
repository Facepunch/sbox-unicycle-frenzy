
@inherits Panel
@attribute [NavigatorTarget("/menu/customize")]

<root>
    <div class="container">
        <div class="columns ">
            <div class="column is-5">
            <div class="preview gamepanel">
                <CustomizeRenderScene @ref="RenderScene" class="render"></CustomizeRenderScene>
            </div>
            </div>
            <div class="column is-7 gradient pt-64 pl-32">
                <div class="tabs tabs-part-categories is-large pb-32">
                    @foreach( var PartType in Enum.GetValues<PartType>() )
                    {
                        <button class="@(SelectedTab == PartType ? "active" : "")" @onclick=@(() => SelectCategory(PartType))>@PartType</button>
                    }
                </div>
                <div class="parts-list columns is-multiline">
                    @foreach ( var part in Parts )
                    {
                        <CustomizeItemButton Part=@part />
                    }
                </div>

                <div class="customize-footer">
                    <label class="title is-styled is-size-1 text-orange">@ItemName</label>
                    <label class="subtitle is-styled">@ItemDescription</label>
                </div>
            </div>
        </div>
    </div>
</root>

@code {
    private string ItemName;
    private string ItemDescription;
    private PartType SelectedTab;
    private List<CustomizationPart> Parts = new();

    CustomizeRenderScene RenderScene { get; set; }

    protected override void OnAfterTreeRender(bool firstTime)
    {
        base.OnAfterTreeRender(firstTime);

        if (firstTime)
        {
            RenderScene?.Build();
            SelectCategory(PartType.Frame);
            StateHasChanged();
        }
    }

    private void SelectCategory(PartType type)
    {
        SelectedTab = type;
        Parts = ResourceLibrary.GetAll<CustomizationPart>()
            .Where(x => x.PartType == type && x.CanEquip())
            .ToList();
    }

    protected override void OnEvent(PanelEvent e)
    {
        base.OnEvent(e);

        if(e.Name == "part equipped")
        {
            RenderScene?.Build();
        }
    }

}
