@attribute [StyleSheet("/UI/Styles/stylesheet.scss")]
@inherits Panel

<root class=@(IsOpen ? "open" : "closed")>
    
    <div @ref="EntryCanvas" class="entries">
        @foreach (var entry in ChatEntries)
        {
            <UfChatEntry Name=@entry.Item1 Message=@entry.Item2 />
        }
    </div>

    <div class="input">
        <textentry @ref="Input"></textentry>
    </div>

</root>

@code{
    
    TextEntry Input { get; set; }
    Panel EntryCanvas { get; set; }
    bool IsOpen { get; set; }
    List<Tuple<string, string>> ChatEntries = new();

    protected override void OnAfterTreeRender(bool firstTime)
    {
        if (Input == null) return;
        if (!firstTime) return;

        EntryCanvas.PreferScrollToBottom = true;
        
        Input.AddEventListener("onblur", () =>
        {
            if (Input.Text.Length > 0 && Input.Text.Length < 120)
            {
                UfChat.SendChat(Input.Text);
            }
            IsOpen = false;
            Input.Text = string.Empty;
            StateHasChanged();
        });
    }

    public void AddMessage(string name, string message)
    {
        ChatEntries.Add(new(name, message));
        StateHasChanged();
    }

    [Event.BuildInput]
    private void OnBuildInput( InputBuilder b )
    {
        if ( b.Pressed( InputButton.Chat ) )
        {
            IsOpen = !IsOpen;
            StateHasChanged();

            if (IsOpen)
            {
                Input.Focus();
            }
        }
    }

}